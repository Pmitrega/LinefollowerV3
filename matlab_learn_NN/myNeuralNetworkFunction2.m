function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 03-Nov-2023 21:56:07.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 2xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-251;-557;-1046];
x1_step1.gain = [0.00398406374501992;0.000584966364434045;0.000584966364434045];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.3477421136013529868;1.5912529584352450573;-0.79900228623154012642;-1.8733721708913202431;1.4223973403174139385;-1.6179522712938760876;-2.7540383507736541091;1.1053672772482530107;0.15890483118040202304;-0.26482079113538492532;-0.36584940823615064165;2.3937123584322277381;2.0726521888938673754;-2.1991539974286800074;3.3659479983323667973;-1.8644204432038882224;-3.1479769645187802851;-1.6644553366754970547;-3.7479052191053745524;-4.5525863699664022022];
IW1_1 = [-2.2247835766489019171 3.5516186415029609158 0.58661154955841354752;-0.33955652457029111835 2.5904342991331041901 1.7223033121017568003;7.6515337827914802205 0.16127857276647730722 0.45157017738740257151;1.1270329014650957156 3.3560646331471666315 2.5878379018847206261;-3.5125743785789276252 0.022840736823505063124 -2.5992674830093909222;1.8361204849532799521 2.0794669305051125541 -2.6520803060453048694;0.69341864789157803273 4.7636065372685232333 1.7390226760202989187;-1.7667296990856375949 -2.3931147801802330477 -2.162366176772830606;8.1096157683959013696 -1.2232033620913245198 -0.98534376656684852236;1.1900023434699711355 -1.2162795038400409098 -3.548509708562279652;11.7193282059913777 0.27855018604162828932 0.64264516717999564666;0.25310268407168245997 -3.8709901446877252873 3.3779034556683904533;1.599781850008374029 5.6147229005283385561 -7.3090140316632297157;-3.5122294513808478555 -1.3114557652802945054 -0.080063233008033196647;2.2019354761585301361 3.1553743720787781335 -4.4488455683032128718;-5.4547423535896095714 -0.23027297373757277255 -2.2002338397137179982;-1.5460066488248036531 -1.8210496486980156661 2.1499136569386454454;0.0090392868399149506331 1.8441647943608736604 4.5658648018358416465;-3.0777592052906181941 -1.4707469650684252827 1.8266822413519752111;-2.3641632779856931457 2.2363518308835916848 -2.8614326610483855617];

% Layer 2
b2 = [1.3426148084805749061;-0.4565734291268749856];
LW2_1 = [1.843499045838103978 -0.56243404165985588783 1.7252243106108373638 0.74136791416813863087 -1.1626614985613661357 2.0041324510824849447 -0.67788144444485043394 -0.24420458496878474919 0.83104983464411807947 -0.45098075119854474924 -3.368314287941235996 1.0051351322706514324 0.33319858743647773336 2.1789971714122637891 0.36951946108607547359 -2.7173138090181843118 -0.9937575448447726334 -0.15032158032359818622 0.94024197076901727677 1.5738954014820019101;-1.2165714335168211768 1.3902290614872749863 -3.7683703312122247553 -1.058881421234097564 0.80818778349736253297 -1.2073348988429373208 0.51948214646570445296 -1.7153494666222532938 2.1636676837224415593 0.23340292245482752165 1.7863760227422440519 -0.61427784291180320686 -0.25979425468729300253 0.39396198355654593604 -0.24933589504633535405 0.96775314532423162284 0.2674618476913924181 0.31329944076824134402 0.52920679820959926065 -1.0224349776718213434];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [9.89805008413343e-05;9.92014285005704e-05];
y1_step1.xoffset = [-9999;-9999];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
