function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 30-Oct-2023 20:22:21.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 2xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0];
x1_step1.gain = [0.0732667826724059;0.0732600732600733;0.00195503421309873];
x1_step1.ymin = -1;

% Layer 1
b1 = [12.151140528625274939;2.2128153775725540875;4.246259411105205217;4.2411113649730989295;4.3421243978309842504;2.3699613808286414951;-2.3580336548577620626;-2.033643483206772018;0.75756978887373405129;12.768639846869591636;-10.524774070996748776;1.3026036543070409479;-4.221248639070634745;-7.1212113917737847046;0.76107462317274487962;-8.8661325211853387884;-3.6849122736364670061;-13.645209165572543597;-9.5882390456785433486;-10.412061476232164381];
IW1_1 = [-3.4335728163518495215 11.976180388551512124 -1.1884352566386320316;-14.557309858001737268 8.9811422159848284252 5.9409077132236411956;-4.4412085788752380111 1.566146039116200317 10.16537822656352219;0.010526202669013971086 -1.9287588193174804996 -5.287338166324868638;-3.0589298791294683433 -6.0814290012923120088 5.7934531968462037455;-3.4656745738704350934 1.4107498003317147095 6.8570836118852147578;3.7678627427799562533 1.2925200573801043369 -0.95951280537153693651;2.5205968784313323994 -3.0256351043875775453 -1.0785424397288840836;0.039341064506653491972 -4.5990654183262087429 -0.1794788465827925894;13.060199775622606921 -7.0833705226849215109 -5.4883666514966398253;-32.338307159506086919 10.729457517816438639 7.8410578215712920525;7.2492820616513400367 6.1104368942010109933 1.4694497087768838561;1.0572269618256084911 0.3666189178364700485 10.430528915551574798;-15.869776758924979632 -7.6345771851410750841 23.223684846991766051;3.1878465395575577013 1.664168074765834282 0.64492474622516282601;-9.4989519128172332785 -9.4138426310338338965 -13.947930365058651248;-3.1955479893548148773 1.8658672064716674832 4.5460095274633340878;11.068120425871427415 -28.330412275386454013 0.34138294461244134137;0.026582406765472833821 1.2176648749919563031 -7.1438750942833495472;-8.1311921397129385269 -11.258496951229819416 14.048757687206931521];

% Layer 2
b2 = [-0.13340165106730550448;-2.7568368250103794104];
LW2_1 = [6.7025157030646260736 4.4614895622201560244 -3.2476466812743280954 -0.41008040725149852435 -3.7904769357464100921 5.59277738161004212 -1.1838199563706766071 4.0866649027537942374 13.219317745133013275 0.59513020328952292992 -2.2462008138103954913 -1.6706754013383076085 -1.879477664178548002 1.5901760373559559181 8.3197918634246565972 -0.9554508852655783091 1.5145420293473337292 -8.5644032490570776162 1.4484553188384750033 -2.5567081237622999446;-0.058926147462967808088 7.5336527549674334736 -0.28451538355902772359 -2.2299952042866686419 -1.0171452365081514735 1.0840803258785274288 -0.10460613067908247631 2.3733441807399113799 -4.0392301038904214749 5.70177903748908399 -11.182883606278442912 2.908202187744623135 -0.63949703125965862149 -0.13292563466296600239 -8.4764961352123151528 0.0063414917133218125234 0.75384305621363256744 -0.67177506914836560004 -3.9434296609217383001 -0.28824372466456721353];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0732556010011599;0.0732477758618059];
y1_step1.xoffset = [0;0.00125];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
