function [y1] = NeuralNetworkControl(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-Nov-2023 14:54:17.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 2xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-251;-557;-1046];
x1_step1.gain = [0.00398406374501992;0.000584966364434045;0.000584966364434045];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.6924388938351109246;2.8894053520310958305;-0.20479197511108698793;2.3262705355705746157;-0.5559905356903638296;0.11001750969254295298;-0.19539127066934305899;4.7205493005954490826;2.2676575820133026973;3.9394530639257712146];
IW1_1 = [1.5943171102576463305 1.3989112441863087444 -1.5190673062172501684;-8.5313544666246610149 -4.6690598878095475044 3.9088988473899171083;8.7855212079564122263 0.57265198421311536148 0.86680621426724713263;11.521692858123598668 -4.1529305768064919135 0.29502341876329496451;14.91341789257174355 7.1333823575788848359 -8.2967244357855864934;-30.594407807732725502 1.2522032160201996831 1.5138521818209851322;5.2255527950338827026 0.73693750519290956991 0.47834379565089307773;1.03992495480303071 11.623815040608892701 -5.0841775140195757388;-0.69916314806161927731 -1.3138946853207145171 0.6154030591769235059;1.4266037981727193173 1.5632655480042085827 -4.5626592719635858941];

% Layer 2
b2 = [1.7358722923366853852;1.4858690604556428205];
LW2_1 = [-1.6975496572163157882 0.1683883793499455217 -3.8957879456185611211 0.40833833303097472056 -0.17410688101719751231 0.15531435993812048313 3.846772080899345081 -0.13566778186866360056 -3.2786445096085237161 -0.20977217438066497746;0.22989224357846455016 -0.25653033795456781085 3.9019574134389385378 0.11004725155325627284 0.1933628966989898168 -0.34420634238154174112 -4.9416243012466907203 0.13745040036409220119 -1.5188160066010427673 0.33689241253401286391];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [9.89805008413343e-05;9.92014285005704e-05];
y1_step1.xoffset = [-9999;-9999];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
